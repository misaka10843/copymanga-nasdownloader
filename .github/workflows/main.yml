name: Linux & Windows build

on:
  release:
    types:
      - released
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable (Nuitka onefile)
        run: |
          OUTPUT_NAME="copymanga-nasdownloader${{ matrix.os == 'ubuntu-latest' && '-linux' || '' }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          python -m nuitka \
            --onefile \
            --output-filename="$OUTPUT_NAME" \
            main.py
          mkdir -p build
          mv "$OUTPUT_NAME" build/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }} Build
          path: build/*

      - name: Prepare GH Release Assets
        if: github.event_name == 'release'
        run: |-
          cd build
          for file in *; do
            md5sum "$file" >> "${file%.*}.md5"
            sha256sum "$file" >> "${file%.*}.sha256"
          done
          ls -l

      - name: Upload GH Release Assets
        if: github.event_name == 'release'
        uses: shogo82148/actions-upload-release-asset@aac270e08f6b4547ada0b3800f88e1eb3ce9d400
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/*
